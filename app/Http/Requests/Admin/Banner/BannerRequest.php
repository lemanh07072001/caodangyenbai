<?php

namespace App\Http\Requests\Admin\Banner;

use Illuminate\Support\Str;
use App\Rules\Admin\FlileCategoriesRule;
use Illuminate\Foundation\Http\FormRequest;

class BannerRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        if (!empty(request()->route()->parameters['id'])) {
            $id = request()->route()->parameters['id'];
        }

        if (!empty($id)) {
            $rule = [
                'title' => 'required|string|max:255|unique:banners,title,' . $id,
                'categories_id' => 'nullable|numeric',
                'link' => $this->filled('link') ? [function ($attr, $value, $err) {
                    if ($value && request()->categories_id != 0) {
                        $err('Đường dẫn và danh mục chỉ được chọn một!');
                    }
                }, 'required', 'url:http,https'] : '',
                'thumbnail' =>  [new FlileCategoriesRule, 'required'],
            ];
        } else {
            $rule = [
                'title' => 'required|string|max:255|unique:banners,title',
                'categories_id' => 'nullable|numeric',
                'link' => $this->filled('link') ? [function ($attr, $value, $err) {
                    if ($value && request()->categories_id != 0) {
                        $err('Đường dẫn và danh mục chỉ được chọn một!');
                    }
                }, 'required', 'url:http,https'] : '',
                'thumbnail' =>  [new FlileCategoriesRule, 'required'],
            ];
        }
        return  $rule;
    }

    public function messages()
    {
        return [
            'title.required' => ':attribute không được để trống',
            'title.string' => ':attribute pahir là kiểu chuỗi',
            'title.max' => ':attribute không được quá :max ký tự',
            'title.unique' => ':attribute đã tồn tại trong hệ thống',
            'categories_id.nullable' => 'Lỗi không xác định',
            'categories_id.numeric' => 'Lỗi không xác định',
            'link.required' => ':attribute không được để trống',
            'link.url' => 'Định dạng không chính xác',
            'thumbnail.required' => ':attribute không được để trống',

        ]; // TODO: Change the autogenerated stub
    }

    public function attributes()
    {
        return [
            'title' => 'Tên banner',
            'categories_id' => 'Danh mục',
            'link' => 'Đường dẫn',
            'thumbnail' => 'Hình ảnh',
        ]; // TODO: Change the autogenerated stub
    }

    protected function prepareForValidation(): void
    {
        $this->merge([
            'slug' => Str::slug($this->title),
        ]);
    }
}
